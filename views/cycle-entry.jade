extends page

block header
	li 
		a(href="/") Gemini Scouting System
		span(class="divider") /
	li(class="active") Cycle Entry

block content
	form(id="cycle", method="post")
		-var teamsRegex = "";
		-for (var i = 0; i < teams.length; ++i){
			- teamsRegex = teamsRegex+teams[i]+"|";
		-}
		
		-if(team && match && possession){
		
		//Preamble
		label(for="team") Team:
		input(name="team", type="text", required="required", pattern=teamsRegex, value=team)
		
		label(for="match") Match:
		input(name="match", type="number", step="1", required="required", min=1, max=maxMatchNumber, value=match)
		
		label(for="possession") Possession:
		input(name="possession", type="number", step="1", required="required", min=1, max=20, value=possession)
		
		//Cycle
		- for (var i = 0; i < cycle.length; ++i){
		label(for=cycle[i]['field'])=cycle[i]['name']+":"
		- if (cycle[i].values){
			- var regexp = "";
			- for (var j = 0; j < cycle[i].values.length; ++j){
				- if(j == 0){
					- regexp = regexp + match[i].values[j];
				-}else{
					- regexp = regexp + "|" + match[i].values[j];
				-}
			-}
			-if(i == 0){
			input(name=cycle[i]['field'], type="text", required="required", pattern=regexp, cyclefocus="cyclefocus")
			-}else{
			input(name=cycle[i]['field'], type="text", required="required", pattern=regexp)
			-}
		- }else{
			-if(i == 0){
			input(name=cycle[i]['field'], type="number", step="1", required="required", min=cycle[i]['min'], max=cycle[i]['max'], autofocus)
			-}else{
			input(name=cycle[i]['field'], type="number", step="1", required="required", min=cycle[i]['min'], max=cycle[i]['max'])
			-}
		-}
		-}
		
		-}else{
		
		//Preamble
		label(for="team") Team:
		input(name="team", type="text", required="required", pattern=teamsRegex, autofocus)
		
		label(for="match") Match:
		input(name="match", type="number", step="1", required="required", min=1, max=maxMatchNumber)

		label(for="possession") Possession:
		input(name="possession", type="number", step="1", required="required", min=1, max=20)
		
		//Cycle
		- for (var i = 0; i < cycle.length; ++i){
		label(for=cycle[i]['field'])=cycle[i]['name']+":"
		- if (cycle[i].values){
			- var regexp = "";
			- for (var j = 0; j < cycle[i].values.length; ++j){
				- if(j == 0){
					- regexp = regexp + match[i].values[j];
				-}else{
					- regexp = regexp + "|" + match[i].values[j];
				-}
			-}
			input(name=cycle[i]['field'], type="text", required="required", pattern=regexp)
		- }else{
			input(name=cycle[i]['field'], type="number", step="1", required="required", min=cycle[i]['min'], max=cycle[i]['max'])
		-}
		-}
		-}
		
		//Submit
		input(class="btn btn-primary", name="submit", type="submit", value="Submit")
		
		//Finish
		a(href="/", class="btn btn-info finish") Finish